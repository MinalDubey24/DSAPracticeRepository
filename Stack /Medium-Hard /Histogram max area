class Solution {
    public static int getMaxArea(int arr[]) {
        // your code here
        Stack<Integer> st= new Stack<>();
        int left[]= new int[arr.length];
        int right[]= new int[arr.length];
        int area;
        int max=0;
        
        for(int i=0;i<arr.length;i++){
            
            while(st.size()>0 && arr[st.peek()]>=arr[i]){
                st.pop();
            }
           
            left[i]=st.isEmpty()?-1:st.peek();
            st.push(i);
        }
        
        while(st.size()>0){
            st.pop();
        }
        
        for(int i=arr.length-1;i>=0;i--){
            while(st.size()>0 && arr[st.peek()]>=arr[i]){
                st.pop();
            }
            right[i]=st.isEmpty()?arr.length:st.peek();
            st.push(i);
        }
        
        for(int i=0;i<arr.length;i++){
            int width= right[i]-left[i]-1;
            area= width* arr[i];
            
            max=Math.max(max,area);
        }
        
        return max;
    }
}
